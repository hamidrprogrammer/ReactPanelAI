{"version":3,"file":"static/js/306.baf7cedf.chunk.js","mappings":"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","sources":["components/Conversation/Message.js","components/Conversation/MsgTypes.js","components/Conversation/Header.js","components/Conversation/Footer.js","components/Conversation/index.js","components/StyledBadge.js"],"sourcesContent":["import { Box, Stack } from '@mui/material'\r\nimport React from 'react';\r\nimport { Chat_History } from '../../data'\r\nimport { Base64PDFViewer, DocMsg, LinkMsg, MediaMsg, ReplyMsg, TextMsg, TimeLine } from './MsgTypes';\r\nconst Article = ({ content }) => {\r\n  const formattedContent = content.split('### ').map((section, index) => {\r\n    if (section.trim() === '') return null;\r\n\r\n    const [title, ...body] = section.split('\\n').filter(line => line.trim() !== '');\r\n\r\n    return (\r\n      <div key={index}>\r\n        {title && (\r\n          <h3>{title.replace(/^#+\\s*/, '')}</h3>\r\n        )}\r\n        {body.map((paragraph, idx) => {\r\n          if (paragraph.startsWith('####')) {\r\n            return <h4 key={idx}>{paragraph.replace(/^#+\\s*/, '')}</h4>;\r\n          } else if (paragraph.startsWith('-')) {\r\n            return (\r\n              <ul key={idx}>\r\n                <li>{paragraph.replace(/^- /, '')}</li>\r\n              </ul>\r\n            );\r\n          } else {\r\n            return <p key={idx}>{paragraph}</p>;\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <article>\r\n      {formattedContent}\r\n    </article>\r\n  );\r\n};\r\nconst Message = ({ menu, list }) => {\r\n  return (\r\n    <Box p={3}>\r\n      <Stack spacing={3}>\r\n        {list?.map((el) => {\r\n          switch (el.type) {\r\n            case 'divider':\r\n              return <TimeLine el={el} />\r\n\r\n            case 'msg':\r\n              switch (el.subtype) {\r\n                case 'img':\r\n                  case 'doc':\r\n                    return (\r\n                      <>\r\n                        <div\r\n                          dangerouslySetInnerHTML={{ __html: el.message }} // Render the HTML content safely\r\n                        />\r\n                     \r\n                        <embed src={`data:application/pdf;base64,${el.file}`} />\r\n                      </>\r\n                    );\r\n                 \r\n                 \r\n\r\n                case 'link':\r\n                  return <LinkMsg el={el} menu={menu} />\r\n                case 'reply':\r\n                  return <ReplyMsg el={el} menu={menu} />\r\n\r\n                default:\r\n                  return <TextMsg el={el} menu={menu} />\r\n              }\r\n              break;\r\n\r\n            default:\r\n              return <></>;\r\n          }\r\n        })}\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Message","import { Box, Divider, IconButton, Link, Stack, Typography, Menu, MenuItem } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { DotsThreeVertical, DownloadSimple, Image } from 'phosphor-react';\r\nimport React from 'react';\r\nimport {Message_options} from '../../data'\r\nimport { useState } from 'react';\r\n\r\nconst DocMsg = ({el,menu}) => {\r\n    const theme = useTheme();\r\n  return (\r\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\r\n        <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming ? theme.palette.background.default :\r\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\r\n            }}>\r\n        <Stack spacing={2}>\r\n            <Stack p={2} spacing={3} direction='row' alignItems='center' \r\n            sx={{backgroundColor:theme.palette.background.paper, borderRadius:1}}>\r\n                <Image size={48}/>\r\n                <Typography variant='caption'>\r\n                    Abstract.png\r\n                </Typography>\r\n                <IconButton>\r\n                    <DownloadSimple/>\r\n                </IconButton>\r\n            </Stack>\r\n            <Typography variant='body2' sx={{color: el.incoming ? theme.palette.text : '#fff' }} >\r\n                {el.message}\r\n            </Typography>\r\n        </Stack>\r\n        </Box>\r\n        {menu && <MessageOptions/>}\r\n        \r\n    </Stack>\r\n  )\r\n}\r\nconst Base64PDFViewer = ({ base64Data }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n  \r\n    const pdfSrc = `data:application/pdf;base64,${base64Data}`;\r\n  \r\n    const toggleViewer = () => {\r\n      setIsOpen(!isOpen);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <button onClick={toggleViewer} style={{ marginBottom: '10px' }}>\r\n          {isOpen ? 'Close PDF' : 'Open PDF'}\r\n        </button>\r\n  \r\n        <div style={{ position: 'relative' }}>\r\n          <iframe\r\n            title=\"PDF Viewer\"\r\n            src={pdfSrc}\r\n            width={isOpen ? '100%' : '300px'} // Small frame when closed\r\n            height={isOpen ? '800px' : '200px'} // Small height when closed\r\n            style={{ border: 'none', transition: 'all 0.3s ease' }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nconst LinkMsg = ({el,menu}) => {\r\n    const theme = useTheme();\r\n  return (\r\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\r\n        <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming ? theme.palette.background.default :\r\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\r\n            }}>\r\n        <Stack spacing={2}>\r\n            <Stack p={2} spacing={3} alignItems='start'\r\n             sx={{backgroundColor:theme.palette.background.paper, borderRadius: 1}}>\r\n                <img src={el.preview} alt={el.message} style={{maxHeight:210, borderRadius:'10px'}}/>\r\n                <Stack spacing={2}>\r\n                    <Typography variant='subtitle2'>Creating Chat App</Typography>\r\n                    <Typography variant='subtitle2' sx={{color:theme.palette.primary.main}} \r\n                    component={Link} to=\"//https://www.youtube.com\">www.youtube.com</Typography>\r\n                </Stack>\r\n                <Typography variant='body2' color={el.incoming ? theme.palette.text : '#fff'}>\r\n                    {el.message}\r\n                </Typography>\r\n            </Stack>\r\n        </Stack>\r\n        </Box>\r\n        {menu && <MessageOptions/>}\r\n    </Stack>\r\n  )\r\n}\r\n\r\nconst ReplyMsg = ({el, menu}) => {\r\n    const theme = useTheme();\r\n  return (\r\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\r\n        <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming ? theme.palette.background.default :\r\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\r\n            }}>\r\n        <Stack spacing={2}>\r\n            <Stack p={2} direction='column' spacing={3} alignItems='center'\r\n            sx={{backgroundColor:theme.palette.background.paper, borderRadius:1}}>\r\n                <Typography variant='body2' color={theme.palette.text}>\r\n                    {el.message}\r\n                </Typography>    \r\n            </Stack>\r\n            <Typography variant='body2' color={ el.incoming ? theme.palette.text : '#fff'}>\r\n                {el.reply}\r\n            </Typography>\r\n        </Stack>\r\n        </Box>\r\n        {menu && <MessageOptions/>}\r\n    </Stack>\r\n  )\r\n}\r\n\r\nconst MediaMsg = ({el,menu}) => {\r\n    const theme = useTheme();\r\n  return (\r\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\r\n        <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming ? theme.palette.background.default :\r\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\r\n            }}>\r\n                <Stack spacing={1}>\r\n                    <img src={el.img} alt={el.message} style={{maxHeight: 210 , borderRadius:'10px'}}/>\r\n                    <Typography variant='body2' color={el.incoming ? theme.palette.text : '#fff'}>\r\n                        {el.message}\r\n                    </Typography>\r\n                </Stack>\r\n            </Box>\r\n            {menu && <MessageOptions/>}\r\n    </Stack>\r\n  )\r\n}\r\n\r\nconst TextMsg = ({el,menu}) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\r\n            <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming ? theme.palette.background.default :\r\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\r\n            }}>\r\n                <Typography variant='body2' color={el.incoming ? theme.palette.text : '#fff'}>\r\n                    {el.message}\r\n                </Typography>\r\n            </Box>\r\n            {menu && <MessageOptions/>}\r\n        </Stack>\r\n    )\r\n}\r\n\r\nconst TimeLine = ({ el }) => {\r\n    const theme = useTheme();\r\n    return <Stack direction='row' alignItems='center' justifyContent='space-between'>\r\n        <Divider width='46%' />\r\n        <Typography variant='caption' sx={{ color: theme.palette.text }}>\r\n            {el.text}\r\n        </Typography>\r\n        <Divider width='46%' />\r\n    </Stack>\r\n}\r\n\r\nconst MessageOptions = () => {\r\n    \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <>\r\n    <DotsThreeVertical \r\n    id=\"basic-button\"\r\n    aria-controls={open ? 'basic-menu' : undefined}\r\n    aria-haspopup=\"true\"\r\n    aria-expanded={open ? 'true' : undefined}\r\n    onClick={handleClick}\r\n    size={20}\r\n    />\r\n\r\n    <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}\r\n      >\r\n      <Stack spacing={1} px={1}>\r\n        {Message_options.map((el)=>(\r\n            <MenuItem onClick={handleClick}>{el.title}</MenuItem>\r\n        ))}\r\n      </Stack>\r\n      </Menu>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n// should not be default export, because we need to export multiple things\r\nexport { TimeLine, TextMsg, MediaMsg, ReplyMsg, LinkMsg, DocMsg,Base64PDFViewer }","import { Avatar, Box, Typography,IconButton, Divider,Stack, } from '@mui/material'\r\nimport { CaretDown, MagnifyingGlass, Phone,VideoCamera } from 'phosphor-react'\r\nimport React, { useEffect } from 'react';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { faker } from '@faker-js/faker';\r\nimport StyledBadge from '../StyledBadge';\r\nimport { ToggleSidebar } from '../../redux/slices/app';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useMsal } from '@azure/msal-react';\r\nimport { PublicClientApplication } from '@azure/msal-browser';\r\nimport { Client } from '@microsoft/microsoft-graph-client';\r\nimport { useState } from 'react';\r\nconst getGraphClient = (accessToken) => {\r\n    return Client.init({\r\n        authProvider: (done) => {\r\n            done(null, accessToken);\r\n        },\r\n    });\r\n};\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const { instance, accounts } = useMsal();\r\n  const [profile, setProfile] = useState(null);\r\n  const [profilePicture, setProfilePicture] = useState(null);\r\n\r\n  useEffect(() => {\r\n      if (accounts.length > 0) {\r\n          // Get access token\r\n          instance\r\n              .acquireTokenSilent({\r\n                  scopes: [\"User.Read\"],\r\n                  account: accounts[0],\r\n              })\r\n              .then((response) => {\r\n                  // Use the token to fetch user data from Microsoft Graph\r\n                  const graphClient = getGraphClient(response.accessToken);\r\n                  graphClient.api('/me').get().then((user) => {\r\n                      setProfile(user);\r\n                  });\r\n                  graphClient.api('/me/photo/$value')\r\n                        .responseType('blob')\r\n                        .get()\r\n                        .then((photoBlob) => {\r\n                            const url = URL.createObjectURL(photoBlob);\r\n                            setProfilePicture(url);\r\n                        });\r\n              })\r\n              .catch((error) => {\r\n                  console.error(error);\r\n              });\r\n      }\r\n  }, [instance, accounts]);\r\n  return (\r\n    <Box p={2} sx={{ width:'100%', backgroundColor: theme.palette.mode === 'light' ? '#F8FAFF' : theme.palette.background.paper, boxShadow:'0px 0px 2px rgba(0,0,0,0.25)'}}>\r\n    <Stack alignItems={'center'} direction='row' justifyContent={'space-between'}\r\n    sx={{width:'100%', height:'100%'}}>\r\n        <Stack onClick={()=>{\r\n            dispatch(ToggleSidebar());\r\n        }} direction={'row'} spacing={2}>\r\n            <Box>\r\n                <StyledBadge  overlap=\"circular\"\r\n                anchorOrigin={{ // position\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"right\",\r\n                }}\r\n                variant=\"dot\">\r\n                    <Avatar alt={faker.name.fullName()} src={profilePicture}/>\r\n                </StyledBadge>\r\n                \r\n            </Box>\r\n            <Stack spacing={0.2}>\r\n                    <Typography variant='subtitle2'>\r\n                        {profile?.displayName}\r\n                    </Typography>\r\n                    <Typography variant='caption'>\r\n                        Online\r\n                    </Typography>\r\n                </Stack>\r\n        </Stack>\r\n        <Stack direction='row' alignItems='center' spacing={3}>\r\n            <IconButton>\r\n                <VideoCamera/>\r\n            </IconButton>\r\n            <IconButton>\r\n                <Phone/>\r\n            </IconButton>\r\n            <IconButton>\r\n                <MagnifyingGlass/>\r\n            </IconButton>\r\n            <Divider orientation='vertical' flexItem/>\r\n            <IconButton>\r\n                <CaretDown/>\r\n            </IconButton>\r\n        </Stack>\r\n    </Stack>\r\n</Box>\r\n  )\r\n}\r\n\r\nexport default Header","import { Box, Fab, IconButton, InputAdornment, Stack, TextField, Tooltip } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport { LinkSimple, PaperPlaneTilt, Smiley, Camera, File, Image, Sticker, User } from 'phosphor-react';\r\nimport data from '@emoji-mart/data'\r\nimport Picker from '@emoji-mart/react'\r\nimport { ClipLoader } from 'react-spinners'; // Import the spinner component\r\n\r\nconst StyledInput = styled(TextField)(({ theme }) => ({\r\n    \"& .MuiInputBase-input\": {\r\n        paddingTop: '12px',\r\n        paddingBottom: '12px',\r\n    }\r\n}));\r\n\r\nconst Actions = [\r\n    {\r\n        color: '#4da5fe',\r\n        icon: <Image size={24} />,\r\n        y: 102,\r\n        title: 'Photo/Video'\r\n    },\r\n    {\r\n        color: '#1b8cfe',\r\n        icon: <Sticker size={24} />,\r\n        y: 172,\r\n        title: 'Stickers'\r\n    },\r\n    {\r\n        color: '#0172e4',\r\n        icon: <Camera size={24} />,\r\n        y: 242,\r\n        title: 'Image'\r\n    },\r\n    {\r\n        color: '#0159b2',\r\n        icon: <File size={24} />,\r\n        y: 312,\r\n        title: 'Document'\r\n    },\r\n    {\r\n        color: '#013f7f',\r\n        icon: <User size={24} />,\r\n        y: 382,\r\n        title: 'Contact'\r\n    }\r\n];\r\n\r\nconst ChatInput = ({ setOpenPicker, onChange, value }) => {\r\n    const [openAction, setOpenAction] = useState(false);\r\n\r\n    return (\r\n        <StyledInput value={value} onChange={(e) => {\r\n            onChange(e.target.value)\r\n\r\n        }} fullWidth placeholder='Write a message...' variant='filled' InputProps={{\r\n            disableUnderline: true,\r\n            startAdornment:\r\n                <Stack sx={{ width: 'max-content' }}>\r\n                    <Stack sx={{ position: 'relative', display: openAction ? 'inline-block' : 'none' }}>\r\n                        {Actions.map((el) => (\r\n                            <Tooltip placement='right' title={el.title}>\r\n                                <Fab sx={{ position: 'absolute', top: -el.y, backgroundColor: el.color }}>\r\n                                    {el.icon}\r\n                                </Fab>\r\n                            </Tooltip>\r\n\r\n                        ))}\r\n                    </Stack>\r\n                    <InputAdornment\r\n                    >\r\n                        <IconButton onClick={() => {\r\n\r\n                            setOpenAction((prev) => !prev)\r\n                        }}>\r\n                            <LinkSimple />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                </Stack>\r\n            ,\r\n            endAdornment: <InputAdornment>\r\n                <IconButton onClick={() => {\r\n                    setOpenPicker((prev) => !prev);\r\n                }}>\r\n                    <Smiley />\r\n                </IconButton>\r\n            </InputAdornment>\r\n        }} />\r\n    )\r\n}\r\n\r\nconst Footer = ({ onPress, loading }) => {\r\n    const theme = useTheme();\r\n    const [openPicker, setOpenPicker] = useState(false);\r\n    const [textUser, setTextUser] = useState(\"\");\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    return (\r\n        <Box p={2} sx={{\r\n            width: '100%', backgroundColor: theme.palette.mode === 'light' ? '#F8FAFF' :\r\n                theme.palette.background.paper, boxShadow: '0px 0px 2px rgba(0,0,0,0.25)'\r\n        }}>\r\n            <Stack direction='row' alignItems={'center'} spacing={3}>\r\n\r\n                <Stack sx={{ width: '100%' }}>\r\n                    {/* Chat Input */}\r\n                    {/* <Box sx={{ display: openPicker ? 'inline' : 'none', zIndex: 10, position: 'fixed', bottom: 81, right: 100 }}>\r\n                        <Picker theme={theme.palette.mode} data={data} onEmojiSelect={console.log} />\r\n                    </Box> */}\r\n                    <ChatInput setOpenPicker={setOpenPicker} onChange={(text) => {\r\n                        setTextUser(text)\r\n                        setValue(text)\r\n                    }} value={value} />\r\n                </Stack>\r\n\r\n                <Box sx={{\r\n                    height: 48, width: 48, backgroundColor: theme.palette.primary.main,\r\n                    borderRadius: 1.5\r\n                }}>\r\n                    <Stack sx={{ height: '100%', width: '100%', alignItems: 'center', justifyContent: 'center' }}>\r\n                        <IconButton\r\n                            onClick={() => {\r\n                                setValue('')\r\n                                onPress(textUser)\r\n                            }}>\r\n                            {loading ? <ClipLoader color=\"#fff\" size={24} /> : <PaperPlaneTilt color='#fff' />}\r\n                        </IconButton>\r\n                    </Stack>\r\n\r\n                </Box>\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Footer","import { Box, Stack } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Message from './Message';\r\n\r\nconst Conversation = () => {\r\n  const theme = useTheme();\r\n  const [loadData, setLoadData] = useState(false);\r\n  const [listChat, setLisChat] = useState([\r\n    {\r\n      type: \"msg\",\r\n      message: \"Hi 👋🏻, How are ya ?\",\r\n      incoming: true,\r\n      outgoing: false,\r\n      file:\"\",\r\n    }\r\n\r\n\r\n  ]);\r\n  const handleTranslate = async (inputCode) => {\r\n    setLoadData(true)\r\n    try {\r\n      const myHeaders = new Headers();\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nconst raw = JSON.stringify({\r\n  \"prompt\": \"I want know about Project 8347 Alfa Laval – CCH-32\"\r\n});\r\n\r\nconst requestOptions = {\r\n  method: \"POST\",\r\n  headers: myHeaders,\r\n  body: raw,\r\n  redirect: \"follow\"\r\n};\r\n\r\n      const response = await fetch('http://127.0.0.1:8000/api/prompt', requestOptions);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log( data?.response?.file?.base64_data);\r\n      setLisChat((prevCode) => [...prevCode, {\r\n        type: \"msg\",\r\n        message: data?.response?.content,\r\n        incoming: true,\r\n        outgoing: false,\r\n        subtype: \"doc\",\r\n        file: data?.response?.file?.base64_data,\r\n      }])\r\n\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n\r\n    setLoadData(false)\r\n\r\n\r\n  };\r\n  // --\r\n  return (\r\n    <Stack height={'100%'} maxHeight={'100vh'} width={'auto'}>\r\n\r\n      {/* Chat header */}\r\n      <Header />\r\n      {/* Msg */}\r\n      <Box className='scrollbar' width={\"100%\"} sx={{ flexGrow: 1, height: '100%', overflowY: 'scroll' }}>\r\n        <Message menu={false} list={listChat} />\r\n      </Box>\r\n      {/* Chat footer */}\r\n      <Footer onPress={(text) => {\r\n\r\n        setLisChat((prevCode) => [...prevCode, {\r\n          type: \"msg\",\r\n          message: text,\r\n          incoming: false,\r\n          outgoing: true,\r\n        }])\r\n        handleTranslate(text)\r\n      }} loading={loadData} />\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default Conversation","import styled from \"@emotion/styled\";\r\nimport { Badge } from \"@mui/material\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    \"& .MuiBadge-badge\": {\r\n      backgroundColor: \"#44b700\",\r\n      color: \"#44b700\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n      \"&::after\": {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        borderRadius: \"50%\",\r\n        animation: \"ripple 1.2s infinite ease-in-out\",\r\n        border: \"1px solid currentColor\",\r\n        content: '\"\"',\r\n      },\r\n    },\r\n    \"@keyframes ripple\": {\r\n      \"0%\": {\r\n        transform: \"scale(.8)\",\r\n        opacity: 1,\r\n      },\r\n      \"100%\": {\r\n        transform: \"scale(2.4)\",\r\n        opacity: 0,\r\n      },\r\n    },\r\n  }));\r\n\r\n  export default StyledBadge"],"names":["menu","list","p","spacing","map","el","type","subtype","dangerouslySetInnerHTML","__html","message","src","file","LinkMsg","theme","useTheme","direction","justifyContent","incoming","sx","backgroundColor","palette","background","default","primary","main","borderRadius","width","alignItems","paper","preview","alt","style","maxHeight","variant","color","component","Link","to","text","MessageOptions","ReplyMsg","reply","TextMsg","TimeLine","React","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","id","undefined","onClick","size","onClose","MenuListProps","px","Message_options","title","dispatch","useDispatch","useMsal","instance","accounts","useState","profile","setProfile","profilePicture","setProfilePicture","useEffect","length","acquireTokenSilent","scopes","account","then","response","accessToken","graphClient","Client","authProvider","done","api","get","user","responseType","photoBlob","url","URL","createObjectURL","catch","error","console","Box","mode","boxShadow","Stack","height","ToggleSidebar","StyledBadge","overlap","anchorOrigin","vertical","horizontal","Avatar","faker","Typography","displayName","IconButton","Divider","orientation","flexItem","StyledInput","styled","TextField","paddingTop","paddingBottom","Actions","icon","y","ChatInput","setOpenPicker","onChange","value","openAction","setOpenAction","e","target","fullWidth","placeholder","InputProps","disableUnderline","startAdornment","position","display","Tooltip","placement","Fab","top","InputAdornment","prev","endAdornment","onPress","loading","textUser","setTextUser","setValue","ClipLoader","loadData","setLoadData","outgoing","listChat","setLisChat","handleTranslate","inputCode","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","ok","Error","status","json","data","log","base64_data","prevCode","content","className","flexGrow","overflowY","Message","Badge","left","animation","border","transform","opacity"],"sourceRoot":""}