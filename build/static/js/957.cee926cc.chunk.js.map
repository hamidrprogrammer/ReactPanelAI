{"version":3,"file":"static/js/957.cee926cc.chunk.js","mappings":"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","sources":["components/ChatElement.js","components/Conversation/MsgTypes.js","components/Search/Search.js","components/Search/SearchIconWrapper.js","components/Search/StyledInputBase.js","components/StyledBadge.js","components/hook-form/FormProvider.js","components/hook-form/RHFTextField.js","pages/dashboard/Group.js","components/hook-form/RHFAutocomplete.js","sections/main/CreateGroup.js"],"sourcesContent":["import { Avatar, Badge, Box, Stack, Typography } from '@mui/material';\r\nimport {useTheme , styled} from '@mui/material/styles';\r\nimport StyledBadge from './StyledBadge';\r\n\r\n//single chat element\r\nconst ChatElement = ({id,name, img, msg, time,online, unread}) => {\r\n    const theme = useTheme();\r\n    return (\r\n      <Box sx={{\r\n        width: \"100%\",\r\n        borderRadius: 1,\r\n        backgroundColor: theme.palette.mode === 'light'? \"#fff\" : theme.palette.background.default\r\n      }}\r\n        p={2}>\r\n        <Stack direction=\"row\" alignItems='center' justifyContent='space-between'>\r\n          <Stack direction='row' spacing={2}>\r\n            {online ? <StyledBadge overlap='circular' anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n              variant=\"dot\">\r\n            <Avatar src={img} />\r\n            </StyledBadge> : <Avatar src={img} /> }\r\n            \r\n            <Stack spacing={0.3}>\r\n              <Typography variant='subtitle2'>\r\n                {name}\r\n              </Typography>\r\n              <Typography variant='caption'>\r\n                {msg}\r\n              </Typography>\r\n            </Stack>\r\n            </Stack>\r\n            <Stack spacing={2} alignItems='center'>\r\n              <Typography sx={{fontWeight:600}} variant='caption'>\r\n                {time}\r\n              </Typography>\r\n              <Badge color='primary' badgeContent={unread}>\r\n  \r\n              </Badge>\r\n            </Stack>\r\n          \r\n          \r\n        </Stack>\r\n  \r\n  \r\n      </Box>\r\n    )\r\n  };\r\n\r\n  export default ChatElement","import { Box, Divider, IconButton, Link, Stack, Typography, Menu, MenuItem } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { DotsThreeVertical, DownloadSimple, Image } from 'phosphor-react';\r\nimport React from 'react';\r\nimport {Message_options} from '../../data'\r\nimport { useState } from 'react';\r\n\r\nconst DocMsg = ({el,menu}) => {\r\n    const theme = useTheme();\r\n  return (\r\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\r\n        <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming ? theme.palette.background.default :\r\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\r\n            }}>\r\n        <Stack spacing={2}>\r\n            <Stack p={2} spacing={3} direction='row' alignItems='center' \r\n            sx={{backgroundColor:theme.palette.background.paper, borderRadius:1}}>\r\n                <Image size={48}/>\r\n                <Typography variant='caption'>\r\n                    Abstract.png\r\n                </Typography>\r\n                <IconButton>\r\n                    <DownloadSimple/>\r\n                </IconButton>\r\n            </Stack>\r\n            <Typography variant='body2' sx={{color: el.incoming ? theme.palette.text : '#fff' }} >\r\n                {el.message}\r\n            </Typography>\r\n        </Stack>\r\n        </Box>\r\n        {menu && <MessageOptions/>}\r\n        \r\n    </Stack>\r\n  )\r\n}\r\nconst Base64PDFViewer = ({ base64Data }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n  \r\n    const pdfSrc = `data:application/pdf;base64,${base64Data}`;\r\n  \r\n    const toggleViewer = () => {\r\n      setIsOpen(!isOpen);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <button onClick={toggleViewer} style={{ marginBottom: '10px' }}>\r\n          {isOpen ? 'Close PDF' : 'Open PDF'}\r\n        </button>\r\n  \r\n        <div style={{ position: 'relative' }}>\r\n          <iframe\r\n            title=\"PDF Viewer\"\r\n            src={pdfSrc}\r\n            width={isOpen ? '100%' : '300px'} // Small frame when closed\r\n            height={isOpen ? '800px' : '200px'} // Small height when closed\r\n            style={{ border: 'none', transition: 'all 0.3s ease' }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nconst LinkMsg = ({el,menu}) => {\r\n    const theme = useTheme();\r\n  return (\r\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\r\n        <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming ? theme.palette.background.default :\r\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\r\n            }}>\r\n        <Stack spacing={2}>\r\n            <Stack p={2} spacing={3} alignItems='start'\r\n             sx={{backgroundColor:theme.palette.background.paper, borderRadius: 1}}>\r\n                <img src={el.preview} alt={el.message} style={{maxHeight:210, borderRadius:'10px'}}/>\r\n                <Stack spacing={2}>\r\n                    <Typography variant='subtitle2'>Creating Chat App</Typography>\r\n                    <Typography variant='subtitle2' sx={{color:theme.palette.primary.main}} \r\n                    component={Link} to=\"//https://www.youtube.com\">www.youtube.com</Typography>\r\n                </Stack>\r\n                <Typography variant='body2' color={el.incoming ? theme.palette.text : '#fff'}>\r\n                    {el.message}\r\n                </Typography>\r\n            </Stack>\r\n        </Stack>\r\n        </Box>\r\n        {menu && <MessageOptions/>}\r\n    </Stack>\r\n  )\r\n}\r\n\r\nconst ReplyMsg = ({el, menu}) => {\r\n    const theme = useTheme();\r\n  return (\r\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\r\n        <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming ? theme.palette.background.default :\r\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\r\n            }}>\r\n        <Stack spacing={2}>\r\n            <Stack p={2} direction='column' spacing={3} alignItems='center'\r\n            sx={{backgroundColor:theme.palette.background.paper, borderRadius:1}}>\r\n                <Typography variant='body2' color={theme.palette.text}>\r\n                    {el.message}\r\n                </Typography>    \r\n            </Stack>\r\n            <Typography variant='body2' color={ el.incoming ? theme.palette.text : '#fff'}>\r\n                {el.reply}\r\n            </Typography>\r\n        </Stack>\r\n        </Box>\r\n        {menu && <MessageOptions/>}\r\n    </Stack>\r\n  )\r\n}\r\n\r\nconst MediaMsg = ({el,menu}) => {\r\n    const theme = useTheme();\r\n  return (\r\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\r\n        <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming ? theme.palette.background.default :\r\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\r\n            }}>\r\n                <Stack spacing={1}>\r\n                    <img src={el.img} alt={el.message} style={{maxHeight: 210 , borderRadius:'10px'}}/>\r\n                    <Typography variant='body2' color={el.incoming ? theme.palette.text : '#fff'}>\r\n                        {el.message}\r\n                    </Typography>\r\n                </Stack>\r\n            </Box>\r\n            {menu && <MessageOptions/>}\r\n    </Stack>\r\n  )\r\n}\r\n\r\nconst TextMsg = ({el,menu}) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\r\n            <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming ? theme.palette.background.default :\r\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\r\n            }}>\r\n                <Typography variant='body2' color={el.incoming ? theme.palette.text : '#fff'}>\r\n                    {el.message}\r\n                </Typography>\r\n            </Box>\r\n            {menu && <MessageOptions/>}\r\n        </Stack>\r\n    )\r\n}\r\n\r\nconst TimeLine = ({ el }) => {\r\n    const theme = useTheme();\r\n    return <Stack direction='row' alignItems='center' justifyContent='space-between'>\r\n        <Divider width='46%' />\r\n        <Typography variant='caption' sx={{ color: theme.palette.text }}>\r\n            {el.text}\r\n        </Typography>\r\n        <Divider width='46%' />\r\n    </Stack>\r\n}\r\n\r\nconst MessageOptions = () => {\r\n    \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <>\r\n    <DotsThreeVertical \r\n    id=\"basic-button\"\r\n    aria-controls={open ? 'basic-menu' : undefined}\r\n    aria-haspopup=\"true\"\r\n    aria-expanded={open ? 'true' : undefined}\r\n    onClick={handleClick}\r\n    size={20}\r\n    />\r\n\r\n    <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}\r\n      >\r\n      <Stack spacing={1} px={1}>\r\n        {Message_options.map((el)=>(\r\n            <MenuItem onClick={handleClick}>{el.title}</MenuItem>\r\n        ))}\r\n      </Stack>\r\n      </Menu>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n// should not be default export, because we need to export multiple things\r\nexport { TimeLine, TextMsg, MediaMsg, ReplyMsg, LinkMsg, DocMsg,Base64PDFViewer }","import { styled, alpha } from '@mui/material/styles';\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n    position: \"relative\",\r\n    borderRadius: 20,\r\n    backgroundColor: alpha(theme.palette.background.default, 1),\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\"\r\n  }));\r\n\r\n  export default Search","import { styled} from '@mui/material/styles';\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }));\r\n\r\n  export default SearchIconWrapper;","import { InputBase } from '@mui/material';\r\nimport { styled} from '@mui/material/styles';\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n      width: \"100%\",\r\n    },\r\n  }));\r\n\r\n  export default StyledInputBase","import styled from \"@emotion/styled\";\r\nimport { Badge } from \"@mui/material\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    \"& .MuiBadge-badge\": {\r\n      backgroundColor: \"#44b700\",\r\n      color: \"#44b700\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n      \"&::after\": {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        borderRadius: \"50%\",\r\n        animation: \"ripple 1.2s infinite ease-in-out\",\r\n        border: \"1px solid currentColor\",\r\n        content: '\"\"',\r\n      },\r\n    },\r\n    \"@keyframes ripple\": {\r\n      \"0%\": {\r\n        transform: \"scale(.8)\",\r\n        opacity: 1,\r\n      },\r\n      \"100%\": {\r\n        transform: \"scale(2.4)\",\r\n        opacity: 0,\r\n      },\r\n    },\r\n  }));\r\n\r\n  export default StyledBadge","import React from 'react';\r\nimport { FormProvider as Form } from 'react-hook-form';\r\n\r\nconst FormProvider = ({children, onSubmit, methods}) => {\r\n  return (\r\n    <Form {...methods}>\r\n        <form onSubmit={onSubmit}>\r\n            {children}\r\n        </form>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default FormProvider","import PropTypes from \"prop-types\";\r\n//form\r\nimport { useFormContext,Controller } from \"react-hook-form\";\r\n// @mui\r\nimport { TextField } from \"@mui/material\";\r\n\r\nRHFTextField.propTypes = {\r\n    name: PropTypes.string,\r\n    label: PropTypes.string,\r\n    helperText: PropTypes.node\r\n}\r\n\r\nexport default function RHFTextField({name, helperText, ...other}){\r\n\r\n    const {control} = useFormContext();\r\n    return (\r\n       <Controller name={name} control={control} render={({field,fieldState:{error}})=>(\r\n        <TextField {...field} fullWidth\r\n         value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\r\n         error={!!error} helperText={error ? error.message : helperText}\r\n        {...other}/>\r\n       )}/>\r\n    )\r\n}","import { Box, Stack, Typography, Link, IconButton, Divider } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport { Search, SearchIconWrapper, StyledInputBase } from '../../components/Search'\r\nimport { MagnifyingGlass, Plus } from 'phosphor-react';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { SimpleBarStyle } from '../../components/Scrollbar';\r\nimport '../../css/global.css';\r\nimport { ChatList } from '../../data';\r\nimport ChatElement from '../../components/ChatElement';\r\nimport CreateGroup from '../../sections/main/CreateGroup';\r\n\r\nconst Group = () => {\r\n    const theme = useTheme();\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const handleCloseDialog = () =>{\r\n        setOpenDialog(false);\r\n      }\r\n\r\n    return (\r\n    <>\r\n    <Stack direction={'row'} sx={{width:'100%'}}>\r\n        {/* Left */}\r\n        <Box sx={{height:'100vh' , \r\n        backgroundColor:(theme) =>theme.palette.mode === 'light' ? '#F8FAFF' : theme.palette.background , \r\n        width:320,\r\n        boxShadow:'0px 0px 2px rgba(0,0,0,0.25)'}}>\r\n            <Stack p={3} spacing={2} sx={{maxHeight:'100vh'}}>\r\n                <Stack>\r\n                    <Typography variant='h5'>Group</Typography>\r\n                </Stack>\r\n                <Stack sx={{width:'100%'}}>\r\n                <Search>\r\n                    <SearchIconWrapper>\r\n                    <MagnifyingGlass color=\"#709CE6\" />\r\n                    </SearchIconWrapper>\r\n                    <StyledInputBase placeholder='Search...' inputProps={{ \"aria-label\": \"search\" }} />\r\n                </Search>\r\n                </Stack>\r\n                <Stack direction={'row'} alignItems={'center'} justifyContent={'space-between'}>\r\n                    <Typography variant='subtitle2' component={Link}>Create New Group</Typography>\r\n                    <IconButton onClick={() =>{setOpenDialog(true)}}>\r\n                        <Plus style={{color: theme.palette.primary.main}}/>\r\n                    </IconButton>\r\n                </Stack>\r\n                <Divider/>\r\n                <Stack spacing={3} className='scrollbar'  sx={{flexGrow:1, overflowY:'scroll', height:'100%'}}>\r\n                    <SimpleBarStyle  timeout={500} clickOnTrack={false}>\r\n                        <Stack spacing={2.5}>\r\n                            {/*  */}\r\n                            <Typography variant='subtitle2' sx={{color:'#676667'}}>Pinned</Typography>\r\n                            {/* Pinned */}\r\n                            {ChatList.filter((el)=> el.pinned).map((el)=>{\r\n                                return <ChatElement  {...el}/>\r\n                            })}\r\n\r\n                              {/*  */}\r\n                              <Typography variant='subtitle2' sx={{color:'#676667'}}>All Groups</Typography>\r\n                            {/* Chat List */}\r\n                            {ChatList.filter((el)=> !el.pinned).map((el)=>{\r\n                                return <ChatElement  {...el}/>\r\n                            })}\r\n                        </Stack>\r\n                    </SimpleBarStyle>\r\n                </Stack>\r\n            </Stack>\r\n        </Box>\r\n\r\n        {/* Right */}\r\n\r\n    </Stack>\r\n    {openDialog && <CreateGroup open={openDialog} handleClose={handleCloseDialog}/>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Group","import PropTypes from \"prop-types\";\r\n//form\r\nimport { useFormContext,Controller } from \"react-hook-form\";\r\n// @mui\r\nimport { Autocomplete, TextField } from \"@mui/material\";\r\n\r\nRHFAutocomplete.propTypes = {\r\n    name: PropTypes.string,\r\n    label: PropTypes.string,\r\n    helperText: PropTypes.node\r\n}\r\n\r\nexport default function RHFAutocomplete({name, label, helperText, ...other}){\r\n\r\n    const {control, setValue} = useFormContext();\r\n    return (\r\n       <Controller name={name} control={control} render={({field,fieldState:{error}})=>(\r\n        <Autocomplete {...field} fullWidth\r\n         value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\r\n         onChange={(event, newValue) => setValue(name, newValue, {shouldValidate: true})}\r\n         error={!!error} \r\n        {...other}\r\n        renderInput={(params)=> (\r\n            <TextField label={label} error={!!error} helperText={error ? error.message : helperText} {...params}/>\r\n        )}/>\r\n       )}/>\r\n    )\r\n}","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport { Button, Dialog, DialogContent, DialogTitle, Slide, Stack } from '@mui/material'\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as Yup from 'yup';\r\nimport FormProvider from '../../components/hook-form/FormProvider';\r\nimport { RHFTextField } from '../../components/hook-form';\r\nimport RHFAutocomplete from '../../components/hook-form/RHFAutocomplete';\r\nimport { multiple } from './../../components/Conversation/MsgTypes';\r\n\r\nconst MEMBERS = ['Name 1', 'Name 2', 'Name 3' ];\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nconst CreateGroupForm = ({handleClose}) =>{\r\n  const NewGroupSchema = Yup.object().shape({\r\n    title: Yup.string().required('Title is required'),\r\n    members: Yup.array().min(2, 'Must have at least 2 members')\r\n  });\r\n\r\n  const defaultValues = {\r\n    title:'',\r\n    members:[]\r\n  }\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(NewGroupSchema),\r\n    defaultValues\r\n  });\r\n\r\n  const {reset, watch, setError, handleSubmit, formState:{errors, isSubmitting, isSubmitSuccessful, isValid}}\r\n   = methods;\r\n\r\n   const onSubmit = async (data) => {\r\n    try {\r\n      //api call\r\n      console.log('Data',data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n   };\r\n\r\n   return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        <RHFTextField name='title' label='Title'/>\r\n        <RHFAutocomplete name='members' label='Members' multiple freeSolo \r\n        options={MEMBERS.map((option) => option)} ChipProps={{size: 'medium'}}/>\r\n        <Stack spacing={2} direction='row' alignItems='center' justifyContent='end'>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button type='submit' variant='contained'>\r\n            Create\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </FormProvider>\r\n   )\r\n};\r\n\r\nconst CreateGroup = ({open, handleClose}) => {\r\n  return (\r\n    <Dialog fullWidth maxWidth='xs' open={open} TransitionComponent={Transition} keepMounted sx={{p:4}}>\r\n        {/* Title */}\r\n        <DialogTitle sx={{mb:3}}>Create New Group</DialogTitle>\r\n        {/* Content */}\r\n        <DialogContent>\r\n          {/* Form */}\r\n          <CreateGroupForm handleClose/>\r\n        </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default CreateGroup"],"names":["id","name","img","msg","time","online","unread","theme","useTheme","sx","width","borderRadius","backgroundColor","palette","mode","background","default","p","direction","alignItems","justifyContent","spacing","overlap","anchorOrigin","vertical","horizontal","variant","src","fontWeight","color","badgeContent","LinkMsg","el","menu","incoming","primary","main","paper","preview","alt","message","style","maxHeight","component","Link","to","text","MessageOptions","ReplyMsg","reply","TextMsg","TimeLine","React","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","undefined","onClick","size","onClose","MenuListProps","px","Message_options","title","styled","position","alpha","marginRight","marginLeft","padding","height","pointerEvents","display","InputBase","paddingLeft","StyledBadge","Badge","boxShadow","top","left","animation","border","content","transform","opacity","children","onSubmit","methods","RHFTextField","helperText","other","control","useFormContext","render","field","error","fieldState","TextField","fullWidth","value","useState","openDialog","setOpenDialog","placeholder","inputProps","className","flexGrow","overflowY","timeout","clickOnTrack","ChatList","pinned","map","handleClose","RHFAutocomplete","label","setValue","Autocomplete","onChange","newValue","shouldValidate","renderInput","params","MEMBERS","Transition","props","ref","Slide","CreateGroupForm","NewGroupSchema","Yup","shape","required","members","min","useForm","resolver","yupResolver","defaultValues","handleSubmit","reset","watch","setError","formState","errors","isSubmitting","isSubmitSuccessful","isValid","data","console","log","FormProvider","Stack","multiple","freeSolo","options","option","ChipProps","Button","type","Dialog","maxWidth","TransitionComponent","keepMounted","DialogTitle","mb","DialogContent"],"sourceRoot":""}